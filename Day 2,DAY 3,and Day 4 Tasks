Day 2
--------------------------------------------------------------------------------------------------------------
Task 1:(A)one Real application of Dbms
    **(1) hospital management system(dbms)**
         *patient records,*doctor schedules,*billing

      (2) Airline use dbms

         *manage flight sechedules,*seat avalibility,*passiager booking and ticketing



Task 1:(B)one real application of rdbms
     **(1) Hotels Reservations system**
          *handle room booking,*guest details,*billing *guests<->booking<->rooms

      (2)Banking and financial services

         *customers accounts,*transaction,*loans and *financial records.



----------------------------------------------
Task 2:Identify the various of rdbms open source /comercial
        ***(1) Open Source:\*PostgreSQL,\*MySQL or MariaDB,\*SQLite \*Firebird***

        ***(2)comercial sources:\*oracle database,\*microsoft sql server,\*ibm DB2,\*sap hana,\*Amazon Aurora

--------------------------------------------------
Task 3: Try to install the open source RDBMS in your pc/laptop
         ***(1)open source:*MYSQL 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Day 3
-------------
-------------
Task 1:Identify variours query engines
        ***(A)SQL processing, big data analytics, in-memory computation, or distributed systems.***

          ***1. SQL-Based Query Engines (General Purpose)

          ***2. In-Memory / Embedded Query Engines--zero configuration, fast startup, and local storage

          ***3. Big Data \& Distributed Query Engines

          ***4. Search \& Semi-Structured Data Query Engines

          ***5. Federated / Virtualized Query Engines

          ***6. Proprietary / Commercial Engines

--------------------------------------------------------------------------------------------------------------Task 2:What are various queary executors
    ***(A)query executors are specifically about the runtime part that executes the plan generated by the optimizer.1. Traditional RDBMS Executors***

          ***2. Volcano-Style Iterators (Pull-based)

          ***3. Vectorized Executors (Batch Processing)

          ***4. Code-Generation-Based Executors

          ***5. Distributed Executors

          ***6. Custom Execution Frameworks (Libraries \& Tools)

-------------------------------------------------------------------------------------------------------------Task 3:ACID explain and give example for each
    ***(A)The ACID properties are a set of principles that ensure reliable, consistent, and safe transaction processing in a database system.
       *A – Atomicity-Ensures that a transaction is treated as a single unit, which either completes entirely or does not happen at all. If any part of the transaction fails, the entire transaction is rolled back. 
EX.Transtaion Account-A to Account-B 1000,here account A debite and account B credite incase credite fails
means its roll back.

       *C — Consistency-->transaction brings the database from one valid state to another, maintaining all predefined rules, constraints, and integrity.
EX:tranction dont want be negative in your account 500 if click 1000 it show error.

       *I — Isolation-->Ensures that concurrent transactions do not interfere with each other. Each transaction behaves as if it’s the only one running.
EX:at a time do not transtion for booking ticket may be it will be roll back .
       *D — Durability-->Once a transaction is committed, it remains so—even in the event of a system crash or power failure.
EX:After transation completed no problem 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Day 4
----------
----------
Task 1:CREATE DATABASE it_asset_management;

CREATE TABLE it_asset_management.employees ( 
emp_id INT PRIMARY KEY, 
first_name VARCHAR(50),
 last_name VARCHAR(50), 
 email VARCHAR(100) UNIQUE,
 phone VARCHAR(20), 
 department VARCHAR(100),
 hire_date DATE
 );
 INSERT INTO it_asset_management.employees 
    (emp_id, first_name, last_name, email, phone, department, hire_date)
VALUES
    (1, 'Akhila', 'Darapaneni', 'akhiladarapaneni@example.com', '9876543210', 'IT', '2023-05-15');


3 commands is there DDL,DML,DCL
DDL → CREATE, ALTER, DROP (structure)

DML → INSERT, UPDATE, DELETE, SELECT (data)

DCL → GRANT, REVOKE (permissions)

1.DDL (Data Definition Language) – defines database objects (CREATE, ALTER, DROP, TRUNCATE).
CREATE DATABASE school_management;
USE school_management;
CREATE TABLE students (
    student_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    age INT,
    grade VARCHAR(5),
    email VARCHAR(100) UNIQUE);
    
INSERT INTO students (student_id, first_name, last_name, age, grade, email, phone)
VALUES
(1, 'Akhila', 'Darapaneni', 20, 'A', 'akhila@example.com', '9876543210'),
(2, 'Ravi', 'Kumar', 22, 'B', 'ravi@example.com', '9876501234'),
(3, 'Sneha', 'Reddy', 19, 'A', 'sneha@example.com', '9123456789'),
(4, 'Arjun', 'Varma', 21, 'C', 'arjun@example.com', '9988776655'),
(5, 'Divya', 'Sharma', 23, 'B', 'divya@example.com', '9090909090');



-- Alter table: add phone number column
ALTER TABLE students ADD phone VARCHAR(15);

-- Drop a column
-- ALTER TABLE students DROP COLUMN phone;

-- Truncate table (remove all rows but keep structure)
-- TRUNCATE TABLE students;

-- Drop table (delete table permanently)
-- DROP TABLE students;


2.


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Day 5
--------
--------
Task -1:Create table and inserted data
CREATE DATABASE SchoolDB;
USE SchoolDB;

CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    gender CHAR(1),
    age INT,
    dob DATE,
    grade VARCHAR(5),
    email VARCHAR(100),
    phone VARCHAR(15),
    address VARCHAR(150)
);

INSERT INTO Students (student_id, first_name, last_name, gender, age, dob, grade, email, phone, address) VALUES
(1, 'Alice', 'Johnson', 'F', 20, '2005-01-12', 'A', 'alice.johnson@example.com', '555-1001', '123 Maple St'),
(2, 'Bob', 'Smith', 'M', 21, '2004-02-25', 'B', 'bob.smith@example.com', '555-1002', '456 Oak St'),
(3, 'Charlie', 'Brown', 'M', 22, '2003-03-15', 'C', 'charlie.brown@example.com', '555-1003', '789 Pine St'),
(4, 'Diana', 'Taylor', 'F', 19, '2006-04-30', 'A', 'diana.taylor@example.com', '555-1004', '321 Cedar St'),
(5, 'Ethan', 'Miller', 'M', 23, '2002-05-18', 'B', 'ethan.miller@example.com', '555-1005', '654 Birch St'),
(6, 'Fiona', 'Davis', 'F', 21, '2004-06-22', 'A', 'fiona.davis@example.com', '555-1006', '987 Spruce St'),
(7, 'George', 'Wilson', 'M', 20, '2005-07-19', 'C', 'george.wilson@example.com', '555-1007', '159 Walnut St'),
(8, 'Hannah', 'Moore', 'F', 22, '2003-08-09', 'B', 'hannah.moore@example.com', '555-1008', '753 Willow St'),
(9, 'Ian', 'Anderson', 'M', 20, '2005-09-11', 'A', 'ian.anderson@example.com', '555-1009', '852 Elm St'),
(10, 'Julia', 'Thomas', 'F', 21, '2004-10-28', 'B', 'julia.thomas@example.com', '555-1010', '951 Ash St'),
(11, 'Kevin', 'Jackson', 'M', 23, '2002-11-05', 'C', 'kevin.jackson@example.com', '555-1011', '147 Palm St'),
(12, 'Laura', 'White', 'F', 20, '2005-12-17', 'A', 'laura.white@example.com', '555-1012', '258 Fir St'),
(13, 'Michael', 'Harris', 'M', 22, '2003-01-10', 'B', 'michael.harris@example.com', '555-1013', '369 Redwood St'),
(14, 'Nina', 'Martin', 'F', 19, '2006-02-14', 'A', 'nina.martin@example.com', '555-1014', '741 Poplar St'),
(15, 'Oscar', 'Lee', 'M', 21, '2004-03-21', 'C', 'oscar.lee@example.com', '555-1015', '852 Chestnut St'),
(16, 'Paula', 'Perez', 'F', 22, '2003-04-12', 'B', 'paula.perez@example.com', '555-1016', '963 Cypress St'),
(17, 'Quentin', 'Clark', 'M', 20, '2005-05-25', 'A', 'quentin.clark@example.com', '555-1017', '159 Sycamore St'),
(18, 'Rachel', 'Lewis', 'F', 23, '2002-06-30', 'B', 'rachel.lewis@example.com', '555-1018', '753 Hickory St'),
(19, 'Sam', 'Walker', 'M', 21, '2004-07-07', 'C', 'sam.walker@example.com', '555-1019', '357 Magnolia St'),
(20, 'Tina', 'Hall', 'F', 20, '2005-08-19', 'A', 'tina.hall@example.com', '555-1020', '951 Dogwood St'),
(21, 'Umar', 'Allen', 'M', 22, '2003-09-03', 'B', 'umar.allen@example.com', '555-1021', '147 Willow St'),
(22, 'Vera', 'Young', 'F', 19, '2006-10-28', 'C', 'vera.young@example.com', '555-1022', '258 Aspen St'),
(23, 'Will', 'King', 'M', 21, '2004-11-16', 'B', 'will.king@example.com', '555-1023', '369 Maple St'),
(24, 'Xena', 'Scott', 'F', 22, '2003-12-22', 'A', 'xena.scott@example.com', '555-1024', '741 Oak St'),
(25, 'Yusuf', 'Green', 'M', 20, '2005-01-08', 'C', 'yusuf.green@example.com', '555-1025', '852 Pine St'),
(26, 'Zara', 'Adams', 'F', 21, '2004-02-02', 'B', 'zara.adams@example.com', '555-1026', '963 Cedar St'),
(27, 'Adam', 'Baker', 'M', 23, '2002-03-18', 'A', 'adam.baker@example.com', '555-1027', '159 Birch St'),
(28, 'Bella', 'Carter', 'F', 20, '2005-04-24', 'B', 'bella.carter@example.com', '555-1028', '753 Spruce St'),
(29, 'Chris', 'Mitchell', 'M', 22, '2003-05-11', 'C', 'chris.mitchell@example.com', '555-1029', '357 Walnut St'),
(30, 'Dana', 'Roberts', 'F', 19, '2006-06-07', 'A', 'dana.roberts@example.com', '555-1030', '951 Willow St'),
(31, 'Eli', 'Turner', 'M', 21, '2004-07-14', 'B', 'eli.turner@example.com', '555-1031', '147 Elm St'),
(32, 'Faith', 'Phillips', 'F', 20, '2005-08-20', 'A', 'faith.phillips@example.com', '555-1032', '258 Ash St'),
(33, 'Gavin', 'Campbell', 'M', 22, '2003-09-29', 'C', 'gavin.campbell@example.com', '555-1033', '369 Palm St'),
(34, 'Hailey', 'Parker', 'F', 23, '2002-10-05', 'B', 'hailey.parker@example.com', '555-1034', '741 Fir St'),
(35, 'Isaac', 'Evans', 'M', 19, '2006-11-13', 'A', 'isaac.evans@example.com', '555-1035', '852 Redwood St'),
(36, 'Jade', 'Edwards', 'F', 20, '2005-12-30', 'B', 'jade.edwards@example.com', '555-1036', '963 Poplar St'),
(37, 'Kyle', 'Collins', 'M', 21, '2004-01-19', 'C', 'kyle.collins@example.com', '555-1037', '159 Chestnut St'),
(38, 'Lily', 'Stewart', 'F', 22, '2003-02-11', 'A', 'lily.stewart@example.com', '555-1038', '753 Cypress St'),
(39, 'Mason', 'Sanchez', 'M', 20, '2005-03-15', 'B', 'mason.sanchez@example.com', '555-1039', '357 Sycamore St'),
(40, 'Nora', 'Morris', 'F', 23, '2002-04-28', 'C', 'nora.morris@example.com', '555-1040', '951 Hickory St'),
(41, 'Owen', 'Rogers', 'M', 19, '2006-05-22', 'A', 'owen.rogers@example.com', '555-1041', '147 Magnolia St'),
(42, 'Penny', 'Reed', 'F', 20, '2005-06-29', 'B', 'penny.reed@example.com', '555-1042', '258 Dogwood St'),
(43, 'Ralph', 'Cook', 'M', 22, '2003-07-17', 'C', 'ralph.cook@example.com', '555-1043', '369 Willow St'),
(44, 'Sophie', 'Morgan', 'F', 21, '2004-08-26', 'A', 'sophie.morgan@example.com', '555-1044', '741 Aspen St'),
(45, 'Tom', 'Bell', 'M', 23, '2002-09-03', 'B', 'tom.bell@example.com', '555-1045', '852 Maple St'),
(46, 'Uma', 'Murphy', 'F', 19, '2006-10-12', 'C', 'uma.murphy@example.com', '555-1046', '963 Oak St'),
(47, 'Victor', 'Bailey', 'M', 21, '2004-11-01', 'A', 'victor.bailey@example.com', '555-1047', '159 Pine St'),
(48, 'Wendy', 'Rivera', 'F', 22, '2003-12-19', 'B', 'wendy.rivera@example.com', '555-1048', '753 Cedar St'),
(49, 'Xavier', 'Cooper', 'M', 20, '2005-01-27', 'C', 'xavier.cooper@example.com', '555-1049', '357 Birch St'),
(50, 'Yara', 'Richardson', 'F', 21, '2004-02-15', 'A', 'yara.richardson@example.com', '555-1050', '951 Spruce St');

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Task 2: Write some queary where,And or,between
Select * from Students;
select first_name,last_name,gender,grade from Students;
select count(*) from Students;
select first_name,last_name,gender,grade from Students WHERE age>18;
select first_name,last_name,gender,grade from Students WHERE gender='F';
select first_name,last_name,gender,grade from Students WHERE gender='M';
SELECT student_id, first_name, last_name, gender, grade
FROM students
WHERE gender = 'M' AND grade = 'A';
SELECT student_id, first_name, last_name, gender, age
FROM students
WHERE gender = 'F' OR age < 18;
SELECT student_id, first_name, last_name, grade
FROM students
WHERE NOT grade = 'C';
SELECT student_id, first_name, last_name, grade
FROM students
WHERE grade = 'A' OR grade = 'B';
SELECT student_id, first_name, last_name, gender, age
FROM students
WHERE NOT gender = 'F' AND age >= 19;
SELECT student_id, first_name, last_name, age, grade
FROM students
WHERE age BETWEEN 18 AND 22;
SELECT student_id, first_name, last_name, dob, grade
FROM students
WHERE dob BETWEEN '2002-01-01' AND '2005-12-31';
SELECT student_id, first_name, last_name, grade
FROM students
WHERE student_id BETWEEN 10 AND 20
  AND grade = 'A';
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Day 6
---------
----------
Task 1:IN,NOT IN ,LIKE,"_" THESE OPERTION WRITE EXAMPLE
-- 1.SELECT student_id, first_name, last_name, grade
FROM Students
WHERE grade IN ('A', 'C');

SELECT student_id, first_name, last_name, address
FROM Students
WHERE gender = 'F' 
  AND address IN ('123 Maple St', '951 Ash St', '741 Oak St');
  
  SELECT student_id, first_name, last_name, address
FROM Students
WHERE gender = 'F' 
  AND address  NOT IN ('123 Maple St', '951 Ash St', '741 Oak St');


SELECT student_id, first_name, last_name, age
FROM Students
WHERE age IN (19, 20, 21);

SELECT student_id, first_name, last_name, age
FROM Students
WHERE age  NOT IN (19, 20, 21);

SELECT count(*)
FROM Students
WHERE age IN (19, 20, 21);
SELECT count(*)
FROM Students
WHERE age  NOT IN (19, 20, 21);

SELECT student_id, first_name, last_name, grade
FROM Students
WHERE student_id IN (5, 10, 15, 20, 25);

SELECT student_id, first_name, last_name, grade
FROM Students
WHERE first_name IN ('Alice', 'Ethan', 'Nina', 'Victor');

SELECT student_id, first_name, last_name, email
FROM Students
WHERE email IN (
  'alice.johnson@example.com',
  'bob.smith@example.com',
  'nora.morris@example.com'
);

SELECT student_id, first_name, last_name, grade
FROM Students
WHERE grade IN ('A', 'B')
ORDER BY last_name ASC;

SELECT student_id, first_name, last_name, age
FROM Students
WHERE age IN (19, 20, 21)
ORDER BY age ASC, first_name ASC;

SELECT student_id, first_name, last_name, address
FROM Students
WHERE gender = 'F'
  AND address IN ('123 Maple St', '951 Ash St', '741 Oak St')
ORDER BY address DESC;

SELECT student_id, first_name, last_name, grade
FROM Students
WHERE student_id IN (5, 10, 15, 20, 25)
ORDER BY grade ASC;

SELECT student_id, first_name, last_name, age, grade
FROM Students
WHERE first_name IN ('Alice', 'Ethan', 'Nina', 'Victor')
ORDER BY age DESC;

SELECT student_id, first_name, last_name, grade
FROM Students
WHERE grade NOT IN ('C')
ORDER BY grade ASC;

 
SELECT student_id, first_name, last_name, age
FROM Students
WHERE age NOT IN (19, 20)
ORDER BY age ASC, last_name ASC;


SELECT student_id, first_name, last_name, address
FROM Students
WHERE gender = 'M'
  AND address NOT IN ('123 Maple St', '852 Elm St', '369 Maple St')
ORDER BY address DESC;
 
SELECT student_id, first_name, last_name
FROM Students
WHERE student_id NOT IN (1, 2, 3, 4, 5)
ORDER BY first_name ASC;

SELECT student_id, first_name, last_name, age
FROM Students
WHERE first_name NOT IN ('Alice', 'Bob', 'Charlie', 'Diana')
ORDER BY age DESC;
-----------------------------------------------------------------------------------------------------
 LIKE OPERATION

SELECT student_id, first_name, last_name, grade
FROM Students
WHERE first_name LIKE 'A%';


SELECT student_id, first_name, last_name
FROM Students
WHERE last_name LIKE '%son';


SELECT student_id, first_name, last_name, email
FROM Students
WHERE email LIKE '%example%';

SELECT student_id, first_name, last_name, address
FROM Students
WHERE address LIKE '%Maple%';


SELECT student_id, first_name, last_name
FROM Students
WHERE first_name LIKE '%a%';

SELECT student_id, first_name, last_name
FROM Students
WHERE first_name NOT LIKE 'A%';

SELECT student_id, first_name, last_name
FROM Students
WHERE last_name NOT LIKE '%son';

SELECT student_id, first_name, last_name, email
FROM Students
WHERE email NOT LIKE '%example%';


SELECT student_id, first_name, last_name, address
FROM Students
WHERE address NOT LIKE '%St%';


SELECT student_id, first_name, last_name
FROM Students
WHERE first_name NOT LIKE '%a%';

SELECT student_id, first_name, last_name
FROM Students
WHERE first_name NOT LIKE '%a%';
SELECT COUNT(*)
FROM Students
WHERE first_name NOT LIKE '%a%';

SELECT student_id, first_name, last_name
FROM Students
WHERE first_name LIKE 'A____%';

SELECT student_id, first_name, last_name
FROM Students
WHERE last_name LIKE 'M__%r';

SELECT student_id, first_name, last_name, email
FROM Students
WHERE email LIKE '___a%@%';

SELECT student_id, first_name, last_name
FROM Students
WHERE first_name LIKE '_a%';

SELECT student_id, first_name, last_name, address
FROM Students
WHERE address LIKE '_%St';
SELECT COUNT(*)
FROM Students
WHERE address LIKE '_%St';
============================================================================================================================================================================================================================

